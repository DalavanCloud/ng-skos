angular.module("ngSKOS",["ngSanitize"]).value("version","0.0.2"),angular.module("ngSKOS").directive("skosConcept",function(){return{restrict:"AE",scope:{concept:"=skosConcept",language:"=language",click:"=skosClick"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"template/skos-concept.html"},link:function(scope){scope.isEmptyObject=function(){var keys=Object.keys;return!(keys&&keys.length)},scope.$watch("concept",function(concept){angular.forEach(["uri","inScheme","ancestors","prefLabel","altLabel","note","notation","narrower","broader","related"],function(field){scope[field]=concept?concept[field]:null})},!0)}}}),angular.module("ngSKOS").directive("skosConceptBrowser",function(){return{restrict:"E",scope:{concept:"=",suggestConcept:"=",getByNotation:"=",getByURI:"=",getByLabel:"="},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"template/skos-concept-browser.html"},link:function(scope){scope.getByNotation&&(scope.selectNotation=function(notation){console.log(notation),scope.getByNotation(notation).then(function(response){angular.copy(response,scope.concept)})}),scope.selectConcept=function(concept){scope.selectNotation&&concept.notation&&concept.notation.length&&scope.selectNotation(concept.notation[0])}}}}),angular.module("ngSKOS").directive("skosConceptList",function(){return{restrict:"A",scope:{concepts:"=skosConceptList",onSelect:"=onSelect"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"template/skos-concept-list.html"},link:function(scope){scope.removeConcept=function(index){scope.concepts.splice(index,1)},scope.$watch("concepts")}}}),angular.module("ngSKOS").directive("skosLabel",function(){return{restrict:"A",scope:{concept:"=skosLabel"},template:'{{concept.prefLabel[language] ? concept.prefLabel[language] : "???"}}',link:function(scope,element,attrs){function updateLanguage(language){scope.language=language?language:attrs.lang,language=scope.concept?selectLanguage(scope.concept.prefLabel,scope.language):"",language!=scope.language&&(scope.language=language)}function selectLanguage(labels,language){if(angular.isObject(labels)){if(language&&labels[language])return language;for(language in labels)return language}}attrs.$observe("lang",updateLanguage),scope.$watch("concept.prefLabel",function(){updateLanguage()},!0)}}}),angular.module("ngSKOS").directive("skosTree",["$compile",function($compile){return{restrict:"A",transclude:!0,scope:{tree:"=skosTree"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"template/skos-tree.html"},compile:function(tElement,tAttr,transclude){var compiledContents,contents=tElement.contents().remove();return function(scope,iElement){compiledContents||(compiledContents=$compile(contents,transclude)),compiledContents(scope,function(clone){iElement.append(clone)})}}}}]),angular.module("ngSKOS").factory("SkosConceptListProvider",["SkosHTTPProvider",function(SkosHTTPProvider){var SkosConceptListProvider=function(args){SkosHTTPProvider.call(this,args)};return SkosConceptListProvider.prototype=new SkosHTTPProvider,SkosConceptListProvider.prototype.getConceptList=function(){return this.get()},SkosConceptListProvider.prototype.updateConceptList=function(){return this.getConceptList(list).then(function(response){angular.copy(response,list)})},SkosConceptListProvider}]),angular.module("ngSKOS").factory("SkosConceptProvider",["SkosHTTPProvider",function(SkosHTTPProvider){var SkosConceptProvider=function(args){SkosHTTPProvider.call(this,args)};return SkosConceptProvider.prototype=new SkosHTTPProvider,SkosConceptProvider.prototype.getConcept=function(concept){var url;if(this.url)if(angular.isFunction(this.url))url=this.url(concept);else{if(url=this.url,concept.notation){var notation=concept.notation[0];url=url.replace("{notation}",decodeURIComponent(notation))}url=url.replace("{uri}",decodeURIComponent(concept.uri))}else url=concept.uri;return this.get(url)},SkosConceptProvider.prototype.updateConcept=function(concept){return this.getConcept(concept).then(function(response){angular.copy(response,concept)})},SkosConceptProvider.prototype.updateConnected=function(concept,which){angular.isString(which)?which=[which]:angular.isArray(which)||(which=["broader","narrower","related"]);var service=this;angular.forEach(which,function(w){angular.forEach(concept[w],function(c){service.updateConcept(c)})})},SkosConceptProvider}]),angular.module("ngSKOS").factory("SkosHTTPProvider",["$http","$q",function($http,$q){var SkosHTTPProvider=function(args){args||(args={}),this.transform=args.transform,this.url=args.url;var jsonp=args.jsonp;jsonp&&(jsonp===!0||angular.isNumber(jsonp)||jsonp.match(/^\d/))&&(jsonp="callback"),this.jsonp=jsonp};return SkosHTTPProvider.prototype={get:function(url){url||(url=this.url);var transform=this.transform,get=$http.get;return this.jsonp&&(get=$http.jsonp,url+=-1==url.indexOf("?")?"?":"&",url+=this.jsonp+"=JSON_CALLBACK"),get(url).then(function(response){try{return transform?transform(response.data):response.data}catch(e){return console.error(e),$q.reject(e)}},function(response){return console.error(response),$q.reject(response.data)})}},SkosHTTPProvider}]),angular.module("ngSKOS").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("template/skos-concept-browser.html",'<div ng-if="suggestConcept" style="margin:1em 0em"><input class="form-control" suggest-typeahead="suggestConcept" typeahead-on-select="" ng-model="conceptLabel" placeholder="Search by terms (typeahead)" typeahead-loading="loadingLocations" typeahead-editable="false"><i ng-show="loadingLocations" class="glyphicon glyphicon-refresh typeahead-loading"></i></div><div ng-if="selectNotation" class="search-top" style="overflow:hidden;margin-bottom:15px"><form ng-submit="selectNotation(notation)"><span style="float:left"><input class="form-control search-top-input" ng-model="notation" placeholder="Enter full notation"></span> <button type="submit" ng-disabled="!notation.length" class="search-top-button"><span class="glyphicon glyphicon-search"></span></form></div><div skos-concept="concept" skos-click="selectConcept" language="language"></div>'),$templateCache.put("template/skos-concept-list.html",'<div><ul ng-if="concepts.length" style="list-style-type:none;padding-left:0px"><li ng-repeat="c in concepts" style="max-width:320px;display:block"><span class="notation">{{c.notation[0]}}</span> <span>{{c.prefLabel.de}}</span><div style="display:inline-table"><a href="#" ng-click="onSelect(c)"><span class="glyphicon glyphicon-search"></span></a> <a href="#" ng-click="removeConcept($index)"><span class="glyphicon glyphicon-trash"></span></a></div></li></ul></div>'),$templateCache.put("template/skos-concept-thesaurus.html",'<div class="skos-concept-thesaurus"><ul ng-if="ancestors.length" class="ancestors"><span ng-if="inScheme" class="classification">{{inScheme}}</span><li class="ancestor" ng-repeat="a in ancestors"><span skos-label="a" lang="{{language}}" ng-click="update(a);reload();"></span></li></ul><div class="top top-classic"><span ng-if="notation" class="notation">{{notation[0]}}</span> <b><span skos-label="concept" lang="{{language}}"></span></b><a ng-if="notation" class="uri" href="{{uri}}"><span style="vertical-align:-10%" class="glyphicon glyphicon-globe"></span></a></div><div ng-if="altLabel.length" class="skos-concept-altlabel"><ul><li ng-repeat="alt in altLabel"><span ng-if="$index < 5" style="display:inline">{{alt}}</span> <span style="margin-left:-4px;margin-right:3px" ng-if="$index < 4 && $index < altLabel.length-1">,</span></li></ul></div><div ng-if="broader.length" class="skos-concept-thesaurus-relation"><b>Broader Terms:</b><ul ng-repeat="b in broader"><li><span skos-label="b" lang="{{language}}" ng-click="click(b)"></li></ul></div><div ng-if="narrower.length" class="skos-concept-thesaurus-relation"><b>Narrower Terms:</b><ul ng-repeat="n in narrower"><li><span skos-label="n" lang="{{language}}" ng-click="click(n)"></li></ul></div><div ng-if="related.length" class="skos-concept-thesaurus-relation"><b>Related Terms:</b><ul ng-repeat="r in related"><li><span skos-label="r" lang="{{language}}" ng-click="click(r)"></li></ul></div></div>'),$templateCache.put("template/skos-concept.html",'<div class="skos-concept"><div class="top top-alt"><span ng-if="notation.length" class="notation">{{notation[0]}}</span> <b><span ng-if="prefLabel" skos-label="concept" lang="{{language}}"></span></b> <a ng-if="uri && uri != notation" class="uri" href="{{uri}}"><span class="glyphicon glyphicon-globe"></span></a></div><div ng-if="altLabel.length" class="skos-concept-altlabel"><ul><li ng-repeat="alt in altLabel"><span ng-if="$index < 5" style="display:inline">{{alt}}</span> <span style="margin-left:-4px;margin-right:3px" ng-if="$index < 4 && $index < altLabel.length-1">,</span></li></ul></div><div ng-if="broader.length || narrower.length || related.length" class="skos-concept-connected"><div ng-if="broader.length" class="skos-concept-relation skos-concept-relation-broader"><ul ng-repeat="c in broader"><li><span skos-label="c" lang="{{language}}" ng-click="click(c)"></span></li></ul></div><div ng-if="narrower.length" class="skos-concept-relation skos-concept-relation-narrower"><ul ng-repeat="c in narrower"><li><span skos-label="c" lang="{{language}}" ng-click="click(c)"></span></li></ul></div><div ng-if="related.length" class="skos-concept-relation skos-concept-relation-related"><ul ng-repeat="c in related"><li><span skos-label="c" lang="{{language}}" ng-click="click(c)"></span></li></ul></div></div><div ng-if="!isEmptyObject(note)" style="margin-top:10px"><div ng-repeat="note in note.en" style="width:100%;padding:4px 6px;border:1px solid #ddd;margin-top:8px"><em>{{note}}</em></div></div></div>'),$templateCache.put("template/skos-tree.html",'<div class="skos-tree"><p class="set" ng-if="!tree.topConcepts"><span ng-if="tree.notation" class="notation">{{tree.notation[0]}}</span> <span class="nlabel">{{tree.prefLabel.de}}</span></p><ul><li ng-repeat="n in tree.narrower ? tree.narrower : tree.topConcepts"><span skos-tree="n"></span></li></ul></div>')}]);